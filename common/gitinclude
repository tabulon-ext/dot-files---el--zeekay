[alias]
    br              = branch
    ci              = commit
    co              = checkout
    co-ours         = checkout --ours
    co-theirs       = checkout --theirs
    coi             = checkout-index
    coi-ours        = checkout-index -f -a --stage=2
    coi-theirs      = checkout-index -f -a --stage=3
    cp              = cherry-pick
    df              = diff
    ds              = diff --stat
    ds              = diff --staged
    g               = grep --break --heading --line-number
    last            = log --graph --pretty=format':%C(yellow)%h%Cblue%d%Creset %s %C(white)%an, %ar%Creset' -n 20
    lc              = log ORIG_HEAD.. --stat --no-merges
    lp              = log --patch --pretty=format':%C(yellow)%h%Cblue%d%Creset %s %C(white)%an, %ar%Creset'
    ls              = log --stat --pretty=format':%C(yellow)%h%Cblue%d%Creset %s %C(white)%an, %ar%Creset'
    mt              = mergetool -y
    pu              = pull
    pul             = pull
    pus             = push
    rb              = rebase
    rbc             = rebase --continue
    rbs             = rebase --skip
    rl              = reflog
    rp              = remote prune
    rs              = remote show
    rt              = remote
    ru              = remote update
    sb              = show-branch
    st              = status -s

    catchup         = log --patch --reverse --topo-order _ribbon..origin/main
    changes         = diff --name-status -r
    current-branch  = !git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||'
    delete-merged   = !git pull --prune && git branch --merged | grep -v '*' | xargs -n 1 git branch -d
    diffall         = diff HEAD
    diffstat        = diff --stat
    fetch-all       = fetch --depth=999999999
    forget          = rm --cached
    git2ssh         = !cat "$(git rev-parse --git-dir)/config" | sed -e 's/url = git:/url = ssh:/' > /tmp/config && mv /tmp/config "$(git rev-parse --git-dir)/config"
    lost            = !"git fsck | awk '/dangling commit/ {print $3}' | git show --format='SHA1: %C(yellow)%h%Cblue%d%Creset %s %C(white)%an, %ar%Creset' --stdin | awk '/SHA1/ {sub(\"SHA1: \", \"\"); print}'"
    merge-ours      = !git checkout --ours   . && git add -u && git commit
    merge-theirs    = !git checkout --theirs . && git add -u && git commit
    new             = !hub create && git push --set-upstream origin main
    pop             = stash pop
    push-new        = !git push -u origin `git rev-parse --abbrev-ref HEAD`
    record          = !sh -c '(git add -p -- $@ && git commit) || git reset' --
    reset-origin    = !git fetch && git reset --hard "origin/`git rev-parse --abbrev-ref HEAD`"
    reset-author    = commit --amend --reset-author --no-edit
    ribbon          = tag --force _ribbon origin/main
    root            = !pwd
    serve           = daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
    stage           = add
    staged          = diff --staged
    svn-ci          = svn dcommit
    svn-up          = svn rebase
    tags            = tag -l
    track           = checkout -t
    undo            = reset --soft HEAD^
    unstage         = reset HEAD
    unstaged        = diff
    unstash         = stash apply

[core]
    autocrlf        = false
    excludesfile    = ~/.cvsignore
    whitespace      = trailing-space,space-before-tab
    editor          = vim

[color]
    branch          = true
    diff            = true
    interactive     = true
    status          = true
    ui              = true

[advice]
    statusHints     = false

[branch]
    autosetupmerge  = always
    autosetuprebase = always

[push]
    default         = simple

[rebase]
    autosquash      = true

[rerere]
    enabled         = true

[credential]
    helper          = cache --timeout=31536000

[grep]
    lineNumber      = true

[instaweb]
    httpd           = webrick

[diff]
    mnemonicprefix  = true
    renames         = copies

[merge]
    stat            = true

[hub]
    protocol        = ssh

[gist]
    browse          = true

[http "https://gopkg.in"]
    followRedirects = true

# vim: ft=gitconfig
